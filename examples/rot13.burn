// Rotates each byte by 13
fn rot13(input stream<u8>) -> (out stream<u8>) {
    for byte in input {
        if byte >= `a` && byte <= `m` || byte >= `A` && byte <= `M` {
            byte + 13 -> out;
        } else if byte >= `n` && byte <= `z` || byte >= `N` && byte <= `Z` {
            byte - 13 -> out;
        } else {
            byte -> out;
        }
    }
}

fn main() {
    SOURCES::stdin() -> rot13() -> SINKS::stdout();
}

// #[test]
// fn it_works() {
//     // strings auto convert to streams and back
//     assert rot13('foo') == 'sbb';
//     assert rot13(rot13('foo')) == 'foo';
//     assert rot13('foo bar') == 'sbb one';
// }
