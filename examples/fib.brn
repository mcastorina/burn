fn fibonacci(n u32) u32 {
    if n <= 1 {
        return 1;
    }
    return fibonacci(n-1) + fibonacci(n-2);
}

fn main() {
    // for convenience, SOURCES::args() is already split by whitespace
    // but SOURCES::raw_args() is not
    args := SOURCES::args().skip(1); // stream<string>

    // num knows it is u32 because it is used in fibonacci
    num := args.get().unwrap();

    // convert u32 to an ascii stream
    fibonacci(num).ascii().chain('\n') -> SINKS::stdout();
}
