use logos::Logos;

#[derive(Debug, PartialEq, Logos, Copy, Clone)]
pub enum Token {
    #[error]
    Error,

    #[regex(r"[ \t\n\f]+")]
    Whitespace,
    #[regex("[a-zA-Z][a-zA-Z0-9_]*")]
    Ident,
    #[regex("-?[0-9_]+", |lex| lex.slice().replace('_', "").parse())]
    Number(i64),
    #[regex(r#""([^"]|\.)*"|'([^']|\.)*'"#)]
    String,
    #[token("+")]
    Plus,
    #[token("-")]
    Minus,
    #[token("*")]
    Asterisk,
    #[token("/")]
    Slash,
    #[token("%")]
    Percent,
    #[token("^")]
    Caret,
    #[token("|")]
    Pipe,
    #[token("++")]
    Inc,
    #[token("--")]
    Dec,
    #[token("&&")]
    And,
    #[token("||")]
    Or,
    #[token("!")]
    Bang,
    #[token("~")]
    Tilde,
    #[token("?")]
    Question,
    #[token(",")]
    Comma,
    #[token(";")]
    Semicolon,
    #[token(":")]
    Colon,
    #[token("->")]
    RArrow,
    #[token("&")]
    Ampersand,
    #[token("<<")]
    LeftShift,
    #[token(">>")]
    RightShift,
    #[token("=")]
    Assign,
    #[token(":=")]
    Declare,
    #[token("+=")]
    PlusEqual,
    #[token("-=")]
    MinusEqual,
    #[token("/=")]
    DivideEqual,
    #[token("*=")]
    MultiplyEqual,
    #[token("^=")]
    XorEqual,
    #[token("%=")]
    PercentEqual,
    #[token("|=")]
    OrEqual,
    #[token("&=")]
    AndEqual,
    #[token(">>=")]
    RightShiftEqual,
    #[token("<<=")]
    LeftShiftEqual,
    #[token("{")]
    LeftCurlyBracket,
    #[token("}")]
    RightCurlyBracket,
    #[token("(")]
    LeftParen,
    #[token(")")]
    RightParen,
    #[token("[")]
    LeftSquarBracket,
    #[token("]")]
    RightSquareBracket,
    #[token("<")]
    LeftAngleBracket,
    #[token(">")]
    RightAngleBracket,
    #[token("==")]
    Equal,
    #[token("!=")]
    NotEqual,
    #[token(">=")]
    GreaterOrEqual,
    #[token("<=")]
    LessOrEqual,
    #[regex("//[^\n]*")]
    Comment,
    #[token(".")]
    Period,
    #[token("break")]
    KeywordBreak,
    #[token("continue")]
    KeywordContinue,
    #[token("else")]
    KeywordElse,
    #[token("false")]
    KeywordFalse,
    #[token("for")]
    KeywordFor,
    #[token("fn")]
    KeywordFn,
    #[token("if")]
    KeywordIf,
    #[token("import")]
    KeywordImport,
    #[token("in")]
    KeywordIn,
    #[token("none")]
    KeywordNone,
    #[token("return")]
    KeywordReturn,
    #[token("true")]
    KeywordTrue,
    #[token("while")]
    KeywordWhile,
    #[token("yield")]
    KeywordYield,
}
